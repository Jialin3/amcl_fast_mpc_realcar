<!-- -->

<!-- 小车硬件+AMCL+地图map加载脚本-->

<launch>
  <!-- 选择使用仿真模式-->
  <arg name="sim" default="true" />　

  <group if="$(arg sim)"> <!-- 选择使用仿真模式-->
    <param name="/use_sim_time" value="true" />
    <!-- 启动gazebo仿真环境-->
    <include file="$(find description_pkg)/launch/gazebo_robot.launch"/>

    <node name="lidar_to_world" pkg="lidar2world" type="lidar2world_node"/>

    <node name="mpc_tracking" pkg="mpc_tracking" type="mpc_tracking_node" output="screen">
      <remap from="/mobile_base/mobile_base_controller/cmd_vel" to="/cmd_vel"/>
      <remap from="/mobile_base/mobile_base_controller/odom" to="/odom"/>
    </node>

    <include file="$(find plan_manage)/launch/16_lidar.launch">
      <arg name="odom_topic" value="/odom"/>
    </include>

    <include file="$(find plan_manage)/launch/rviz.launch"/>
    
  </group>

  <group unless="$(arg sim)"><!-- 选择使用实物模式-->
    <!-- 启动实物机器人相关节点-->
    <!-- 机器人底盘驱动节点-->
    <include file="$(find handsfree_hw)/launch/handsfree_hw.launch" />
    <!-- 激光雷达传感器驱动节点-->
    <include file="$(find handsfree_lidar)/launch/lidar.launch" />
        <param name="robot_description" command="$(find xacro)/xacro $(find description_pkg)/urdf/include.xacro" />
        <!-- 启动机器人状态和关节状态发布节点 -->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>
        <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
           <!-- <remap from="/joint_states" to="/mobile_base/joint_states"/>-->
       </node>
  </group>

  <!-- 设置机器人在地图中的初始位置，用于初始化导航系统-->
  <arg name="initial_pose_x" default="0"/>
  <arg name="initial_pose_y" default="0"/>
  <arg name="initial_pose_a" default="0"/>

 <!-- 设置地图：修改成　amcl/map　下的目标地图-->
  <arg name="map_name" default="my_map"/>

  <!-- 机器人型号环境变量，用于加载对应机器人型号的配置参数-->
 <arg name="model" default="mini" doc="model type [mini, stone_v2, stone_v3, giraffe]"/>


  <!-- 目标地图加载，发布地图话题-->

  <node name="map_server" pkg="map_server" type="map_server" args="$(find amclwithmap_pkg)/map/$(arg map_name).yaml" respawn="false" >
    <param name="frame_id" value="map"/>
  </node>

  <!-- 粒子滤波定位，发布机器人当前在地图中的位置-->
  <include file="$(find amclwithmap_pkg)/launch/amcl_node.launch">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/> 
  </include>


</launch>
